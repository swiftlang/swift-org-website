pre-code-text: In addition to detailed help screens and error messages out of the box, your ArgumentParser CLI tools can provide completion scripts and man pages, as well as extensibility through a JSON rendering of the interface.
headline: ArgumentParser in use
tabs:
  - label: CLI usage
    code: |-
      $ repeat yes --count 3
      yes
      yes
      yes

      $ repeat --count
      Error: Missing value for '--count <count>'
      Help:  --count <count>  The number of times to repeat 'phrase'.
      Usage: repeat <phrase> [--count <count>]
        See 'repeat --help' for more information.

      $ repeat -h
      USAGE: repeat <phrase> [--count <count>]

      ARGUMENTS:
        <phrase>                The phrase to repeat.

      OPTIONS:
        --count <count>         The number of times to repeat 'phrase'.
        -h, --help              Show help information.
  - label: Man page
    code: |-
      .\" "Generated by swift-argument-parser"
      .Dd May 21, 2025
      .Dt REPEAT 1
      .Os
      .Sh NAME
      .Nm repeat
      .Sh SYNOPSIS
      .Nm
      .Ar subcommand
      .Ar phrase
      .Op Fl -count Ar count
      .Op Fl -help
      .Sh DESCRIPTION
      .Bl -tag -width 6n
      .It Ar phrase
      The phrase to repeat.
      .It Fl -count Ar count
      The number of times to repeat 'phrase'.
      .It Fl h , -help
      Show help information.
      .It Em help
      Show subcommand help information.
      .Bl -tag -width 6n
      .It Ar subcommands...
      .El
      .El
      .Sh "EXIT STATUS"
      .Ex -std
  - label: Completion script
    code: |-
      #compdef repeat

      __repeat_complete() {
          local -ar non_empty_completions=("${@:#(|:*)}")
          local -ar empty_completions=("${(M)@:#(|:*)}")
          _describe -V '' non_empty_completions -- empty_completions -P $'\'\''
      }

      __repeat_custom_complete() {
          local -a completions
          completions=("${(@f)"$("${command_name}" "${@}" "${command_line[@]}")"}")
          if [[ "${#completions[@]}" -gt 1 ]]; then
              __repeat_complete "${completions[@]:0:-1}"
          fi
      }

      __repeat_cursor_index_in_current_word() {
          if [[ -z "${QIPREFIX}${IPREFIX}${PREFIX}" ]]; then
              printf 0
          else
              printf %s "${#${(z)LBUFFER}[-1]}"
          fi
      }

      _repeat() {
          emulate -RL zsh -G
          setopt extendedglob nullglob numericglobsort
          unsetopt aliases banghist

          local -xr SAP_SHELL=zsh
          local -x SAP_SHELL_VERSION
          SAP_SHELL_VERSION="$(builtin emulate zsh -c 'printf %s "${ZSH_VERSION}"')"
          local -r SAP_SHELL_VERSION

          local context state state_descr line
          local -A opt_args

          local -r command_name="${words[1]}"
          local -ar command_line=("${words[@]}")
          local -ir current_word_index="$((CURRENT - 1))"

          local -i ret=1
          local -ar arg_specs=(
              ':phrase:'
              '--count[The number of times to repeat '\''phrase'\''.]:count:'
              '(-h --help)'{-h,--help}'[Show help information.]'
          )
          _arguments -w -s -S : "${arg_specs[@]}" && ret=0

          return "${ret}"
      }

      _repeat
  - label: JSON output
    code: |-
      {
        "command" : {
          "arguments" : [
            {
              "abstract" : "The phrase to repeat.",
              "isOptional" : false,
              "isRepeating" : false,
              "kind" : "positional",
              "shouldDisplay" : true,
              "valueName" : "phrase"
            },
            {
              "abstract" : "The number of times to repeat 'phrase'.",
              "isOptional" : true,
              "isRepeating" : false,
              "kind" : "option",
              "names" : [
                {
                  "kind" : "long",
                  "name" : "count"
                }
              ],
              "preferredName" : {
                "kind" : "long",
                "name" : "count"
              },
              "shouldDisplay" : true,
              "valueName" : "count"
            },
            {
              "abstract" : "Show help information.",
              "isOptional" : true,
              "isRepeating" : false,
              "kind" : "flag",
              "names" : [
                {
                  "kind" : "short",
                  "name" : "h"
                },
                {
                  "kind" : "long",
                  "name" : "help"
                }
              ],
              "preferredName" : {
                "kind" : "long",
                "name" : "help"
              },
              "shouldDisplay" : true,
              "valueName" : "help"
            }
          ],
          "commandName" : "repeat",
          "shouldDisplay" : true,
          "subcommands" : [
            {
              "abstract" : "Show subcommand help information.",
              "arguments" : [
                {
                  "isOptional" : true,
                  "isRepeating" : true,
                  "kind" : "positional",
                  "shouldDisplay" : true,
                  "valueName" : "subcommands"
                },
                {
                  "isOptional" : true,
                  "isRepeating" : false,
                  "kind" : "flag",
                  "names" : [
                    {
                      "kind" : "short",
                      "name" : "h"
                    },
                    {
                      "kind" : "long",
                      "name" : "help"
                    },
                    {
                      "kind" : "longWithSingleDash",
                      "name" : "help"
                    }
                  ],
                  "preferredName" : {
                    "kind" : "long",
                    "name" : "help"
                  },
                  "shouldDisplay" : false,
                  "valueName" : "help"
                }
              ],
              "commandName" : "help",
              "shouldDisplay" : true,
              "superCommands" : [
                "repeat"
              ]
            }
          ]
        },
        "serializationVersion" : 0
      }
